
// Функція, яка буде додавати нову людину в колекцію persons за допомогою форми
function addNewPerson(){
  const name = document.getElementById('name').value;
  const position = document.getElementById('position').value;
  const salary = document.getElementById('salary').value;
  const childrenAmount = document.getElementById('childrenAmount').value;
  const workExperience = document.getElementById('workExperience').value;

  const newPerson = new FinanceDepartment(name, position, salary, childrenAmount, workExperience);
  fins.addNewPersonTo(newPerson);
  console.log(fins);
  alert(`New person has been added`);
}

// Функція, яка буде виводити інформацію про людину за допомогою коду
function showPerson(){
  const idValue = document.getElementById('code').value;
  const person = fins.getPersonById(idValue);
  if (person) {
    console.log(`Person for code is`,person);
    alert(`Person for code = ${idValue} is \n\n${person}`);
  } else {
    alert(`Not found!`);
  }
}

// Функція, яка буде виводити відредаговану інформацію про людину за допомогою коду
function editPerson(){
    const code = document.getElementById("code").value;
    const person = fins.getPersonById(code);
    if (person) {
        const fullName = prompt(`Введіть нове прізвище та ім'я:`, person.name);
        const position = prompt(`Введіть нову посаду:`, person.position);
        const salary = prompt(`Введіть нову заробітну плату:`, person.salary);
        const childrenCount = prompt(`Введіть нову кількість дітей:`, person.childrenAmount);
        const experience = prompt(`Введіть новий стаж:`, person.workExperience);

        person.name = fullName || person.name;
        person.position = position || person.position;
        person.salary = salary || person.salary;
        person.childrenAmount = childrenCount || person.childrenAmount;
        person.workExperience = experience || person.workExperience;

        alert(`Updated info is \n\n ${ person}`);
        console.log(`Updated info is` ,person);
    } else {
        alert(`Not found!`);
    }
}

function deletePerson(){
    const code = document.getElementById("code").value;
    fins.deleteAllInformationABoutPerson(code);
    alert(`Info for person for code ${code} has been deleted.`);
}

// Функція, яка буде виводити інформацію про людину за допомогою запиту
function answerRequest(){
    const request = document.getElementById('req').value;
    fins.getPersonByRequest(request);
    alert(`Person for request ${request} is \n\n${fins.getPersonByRequest(request)}`);
    console.log(`Person for request is`,fins.getPersonByRequest(request));
}







class FinDeptWithDom extends FinanceDeparmentPersons {
    userToHTML(person) {
        return `
        <tr>
            <td>
                ${person._id}
            </td>
            <td>
                ${person.name}
            </td>
            <td>
                ${person.salary}
            </td>
	    </tr>
        `;
    }

    usersTableToHTML() {
        let rows = "";
        for (let person of this.getAll()) {
            rows += this.userToHTML(person);
        }
        return `
            <table>
                <tr>
                    <th>
                        Id
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Salary
                    </th>
                </tr>
                ${rows}
            </table>

        `;
    }
    toHTML() {
        return this.usersTableToHTML() ;
    }

    mount(parrent) {
        this._parrent = parrent;
        parrent.innerHTML = this.toHTML();
    }
}

let users = new FinDeptWithDom();
users.addNewPersonTo(fin1);
users.addNewPersonTo(fin2);
users.addNewPersonTo(fin3);

let test = document.getElementById("show-workers");
users.mount(document.getElementById("show-workers"));



